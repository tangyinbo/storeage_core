<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cowboy.dao.UserMapper">
	<resultMap type="User" id="User">
		<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="username" property="userName" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="salt" property="salt" jdbcType="VARCHAR" />
		<result column="stat" property="stat" jdbcType="VARCHAR" />
		<result column="real_name" property="realName" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="VARCHAR" />
		<result column="age" property="age" jdbcType="INTEGER" />
		<result column="description" property="description" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="base_users">
		user_id,username,password,salt,stat,real_name,email,phone,sex,age,description
	</sql>
	<sql id="basin_users">
		username,password,salt,stat,real_name,email,phone,sex,age,description
	</sql>
	
	<insert id="addUser" useGeneratedKeys="true" keyProperty="userId" parameterType="User">
		insert into t_sys_users(<include refid="basin_users"/>)
		 values(
			#{userName},#{password},#{salt},#{stat},#{realName},#{email},#{phone},#{sex},#{age},#{description}
		)
	</insert>
	
	<select id="getById" parameterType="int" resultMap="User">
			SELECT <include refid="base_users"/> FROM  t_sys_users u
		where u.user_id=#{userId}
	</select>
	
	<update id="updateUser" parameterType="User">
		UPDATE t_sys_users u SET u.password=#{password} where u.user_id = #{userId}
	</update>
	
	<insert id="correlationRoles" parameterType="java.util.List">
		insert into t_sys_userrole values
		<foreach collection="list" item="item" separator=",">
			( #{item.userId},#{item.roleId} )
		</foreach>
	</insert>
	
	<delete id="uncorrelationRoles" parameterType="java.util.List">
		delete from t_sys_userrole where
		<foreach collection="list" item="item" separator="or">
			( user_id=#{item.userId} and role_id=#{item.roleId} )
		</foreach>
	</delete>
	
	<!-- 获取用户 -->
	<select id="findByUsername" parameterType="string" resultMap="User">
		SELECT <include refid="base_users"/> FROM  t_sys_users u
		where u.username=#{userName}
	</select>
	
	<select id="findPermissions" parameterType="string" resultType="string">
		select p.permission from t_sys_users u inner join t_sys_userrole ur on u.user_id = ur.user_id
									inner join t_sys_rolepriv rp on ur.role_id = rp.role_id
									inner join t_sys_priv p on rp.priv_id = p.priv_id
		where u.username=#{userName} 
	</select>
	
	<select id="findRoles" parameterType="string" resultType="string">
	SELECT role FROM t_sys_roles r where exists(
			SELECT role_id from t_sys_userrole ur where ur.user_id = (
				select user_id FROM t_sys_users where username=#{userName}
			) and ur.role_id = r.role_id
		)
	</select>
	
</mapper>